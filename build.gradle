buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply from: 'https://raw.githubusercontent.com/MinecraftModDevelopment/Gradle-Collection/master/generic/markdown-git-changelog.gradle'


def ENV = System.getenv()
def buildVersion = ENV.BUILD_NUMBER ? "1.0.0.${ENV.BUILD_NUMBER}" : "1.0.0.beta"

version = "1.15.2-" + buildVersion + "-universal"

group = 'com.unrealdinnerbone.jaqm' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'jaqm'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

repositories {
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven { url "https://maven.latmod.com/" }
}

minecraft {
    mappings channel: 'snapshot', version: "${mcp_mappings}"

    runs {
        client {
            workingDirectory project.file('run')
        }

        server {
            workingDirectory project.file('run_server')
        }

        data {
            workingDirectory project.file('run_data')


            args '--mod', 'jaqm', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

dependencies {
    compileOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.15.2:6.0.0.2")
    runtimeOnly fg.deobf("com.wtbw.mods:wtbw_core-1.15.2:1.0.10")
    runtimeOnly fg.deobf("com.wtbw.mods:wtbw_lib-1.15.2:1.0.10")
    runtimeOnly fg.deobf("com.wtbw.mods:wtbw_machines-1.15.2:1.0.10")
    runtimeOnly fg.deobf("com.wtbw.mods:wtbw_tools-1.15.2:1.0.10")
    runtimeOnly fg.deobf("com.wtbw.mods:wtbw_decoration-1.15.2:1.0.9")
    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-${top_version}")
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "tramplestopper",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

curseforge {
    if (project.hasProperty('unreal_curse_api_key')){
        apiKey = project.getProperty('unreal_curse_api_key')
    }
    project {
        id = "368190"
        changelog = getGitChangelog
        changelogType = 'markdown'
        releaseType = 'release'
        addGameVersion '1.15.2'
        addGameVersion 'Forge'
    }
}